<script setup>
import { ref, computed, onMounted } from 'vue'
import { useRouter, useRoute } from 'vue-router'
import ApiService from '@/services/ApiService'
import BaseIcon from '@/components/BaseIcon.vue'
import {
  mdiMenu,
  mdiClose,
  mdiHome,
  mdiDocker,
  mdiConsole,
  mdiServer,
  mdiNetwork,
  mdiCog,
  mdiLogout,
  mdiAccount,
  mdiBell,
  mdiMagnify,
  mdiChevronDown
} from '@mdi/js'

const router = useRouter()
const route = useRoute()

// State
const sidebarOpen = ref(false)
const userMenuOpen = ref(false)
const notifications = ref([])

// Navigation items
const navigationItems = [
  {
    name: 'Dashboard',
    path: '/dashboard',
    icon: mdiHome
  },
  {
    name: 'Containers',
    path: '/containers',
    icon: mdiDocker
  },
  {
    name: 'Terminal',
    path: '/exec',
    icon: mdiConsole
  },
  {
    name: 'Services',
    path: '/services',
    icon: mdiServer
  },
  {
    name: 'Network',
    path: '/network',
    icon: mdiNetwork
  },
  {
    name: 'Settings',
    path: '/settings',
    icon: mdiCog
  }
]

// Computed
const currentPageTitle = computed(() => {
  const current = navigationItems.find(item => item.path === route.path)
  return current?.name || 'Dashboard'
})

// Methods
const toggleSidebar = () => {
  sidebarOpen.value = !sidebarOpen.value
}

const closeSidebar = () => {
  sidebarOpen.value = false
}

const toggleUserMenu = () => {
  userMenuOpen.value = !userMenuOpen.value
}

const logout = async () => {
  try {
    await ApiService.tunnelLogout()
    router.push({ name: 'login' })
  } catch (error) {
    console.error('Logout failed:', error)
  }
}

// Close menus when clicking outside
const handleClickOutside = (event) => {
  if (!event.target.closest('.user-menu')) {
    userMenuOpen.value = false
  }
  if (!event.target.closest('.sidebar') && !event.target.closest('.sidebar-toggle')) {
    sidebarOpen.value = false
  }
}

onMounted(() => {
  document.addEventListener('click', handleClickOutside)
})
</script>

<template>
  <div class="min-h-screen bg-gray-900 text-white">
    <!-- Sidebar -->
    <div 
      :class="[
        'fixed inset-y-0 left-0 z-50 w-64 transform transition-transform duration-300 ease-in-out sidebar',
        sidebarOpen ? 'translate-x-0' : '-translate-x-full lg:translate-x-0'
      ]"
    >
      <div class="flex flex-col h-full bg-gray-800 border-r border-gray-700">
        <!-- Logo -->
        <div class="flex items-center justify-between h-16 px-6 bg-gray-900">
          <div class="flex items-center space-x-3">
            <div class="w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center">
              <BaseIcon :path="mdiDocker" size="20" class="text-white" />
            </div>
            <span class="text-xl font-bold">Redock</span>
          </div>
          <button 
            @click="closeSidebar"
            class="lg:hidden p-2 rounded-lg hover:bg-gray-700 transition-colors"
          >
            <BaseIcon :path="mdiClose" size="20" />
          </button>
        </div>

        <!-- Navigation -->
        <nav class="flex-1 px-4 py-6 space-y-2">
          <router-link
            v-for="item in navigationItems"
            :key="item.name"
            :to="item.path"
            @click="closeSidebar"
            class="flex items-center px-4 py-3 text-gray-300 rounded-lg hover:bg-gray-700 hover:text-white transition-all duration-200 group"
            :class="{ 
              'bg-blue-600 text-white': route.path === item.path,
              'shadow-lg shadow-blue-600/20': route.path === item.path
            }"
          >
            <BaseIcon :path="item.icon" size="20" class="mr-3" />
            {{ item.name }}
          </router-link>
        </nav>

        <!-- User Section -->
        <div class="p-4 border-t border-gray-700">
          <div class="flex items-center space-x-3 p-3 rounded-lg bg-gray-700">
            <div class="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center">
              <BaseIcon :path="mdiAccount" size="16" class="text-white" />
            </div>
            <div class="flex-1 min-w-0">
              <p class="text-sm font-medium text-white truncate">Admin User</p>
              <p class="text-xs text-gray-400 truncate">admin@redock.dev</p>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Mobile overlay -->
    <div 
      v-if="sidebarOpen" 
      class="fixed inset-0 z-40 bg-black bg-opacity-50 lg:hidden"
      @click="closeSidebar"
    ></div>

    <!-- Main content -->
    <div class="lg:pl-64">
      <!-- Top bar -->
      <div class="sticky top-0 z-30 flex items-center justify-between h-16 px-6 bg-gray-800 border-b border-gray-700">
        <div class="flex items-center space-x-4">
          <!-- Mobile menu button -->
          <button 
            @click="toggleSidebar"
            class="lg:hidden p-2 rounded-lg hover:bg-gray-700 transition-colors sidebar-toggle"
          >
            <BaseIcon :path="mdiMenu" size="20" />
          </button>

          <!-- Page title -->
          <h1 class="text-xl font-semibold">{{ currentPageTitle }}</h1>
        </div>

        <div class="flex items-center space-x-4">
          <!-- Search -->
          <div class="relative hidden md:block">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center">
              <BaseIcon :path="mdiMagnify" size="16" class="text-gray-400" />
            </div>
            <input
              type="search"
              placeholder="Search..."
              class="w-64 pl-10 pr-4 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            />
          </div>

          <!-- Notifications -->
          <button class="relative p-2 rounded-lg hover:bg-gray-700 transition-colors">
            <BaseIcon :path="mdiBell" size="20" />
            <span class="absolute top-0 right-0 w-2 h-2 bg-red-500 rounded-full"></span>
          </button>

          <!-- User menu -->
          <div class="relative user-menu">
            <button 
              @click="toggleUserMenu"
              class="flex items-center space-x-2 p-2 rounded-lg hover:bg-gray-700 transition-colors"
            >
              <div class="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center">
                <BaseIcon :path="mdiAccount" size="16" class="text-white" />
              </div>
              <BaseIcon :path="mdiChevronDown" size="16" />
            </button>

            <!-- User dropdown -->
            <div 
              v-if="userMenuOpen"
              class="absolute right-0 mt-2 w-48 bg-gray-800 rounded-lg shadow-lg border border-gray-700 py-2"
            >
              <a href="#" class="flex items-center px-4 py-2 text-gray-300 hover:bg-gray-700 hover:text-white">
                <BaseIcon :path="mdiAccount" size="16" class="mr-3" />
                Profile
              </a>
              <a href="#" class="flex items-center px-4 py-2 text-gray-300 hover:bg-gray-700 hover:text-white">
                <BaseIcon :path="mdiCog" size="16" class="mr-3" />
                Settings
              </a>
              <hr class="my-2 border-gray-700">
              <button 
                @click="logout"
                class="w-full flex items-center px-4 py-2 text-red-400 hover:bg-gray-700 hover:text-red-300"
              >
                <BaseIcon :path="mdiLogout" size="16" class="mr-3" />
                Sign out
              </button>
            </div>
          </div>
        </div>
      </div>

      <!-- Page content -->
      <main class="p-6">
        <slot />
      </main>
    </div>
  </div>
</template>

<style scoped>
/* Custom scrollbar for sidebar */
.sidebar::-webkit-scrollbar {
  width: 4px;
}

.sidebar::-webkit-scrollbar-track {
  background: transparent;
}

.sidebar::-webkit-scrollbar-thumb {
  background: rgba(75, 85, 99, 0.5);
  border-radius: 2px;
}

.sidebar::-webkit-scrollbar-thumb:hover {
  background: rgba(75, 85, 99, 0.7);
}
</style>